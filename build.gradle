buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
	}
	dependencies {
		classpath group: 'org.gradlefx', name: 'gradlefx', version: '1.3.3'
		classpath 'de.undercouch:gradle-download-task:2.0.0'
	}
}

apply plugin: 'gradlefx'
apply plugin: 'de.undercouch.download'

version = '1.0-SNAPSHOT'

repositories {
    maven {
		name 'hamcrest-as3-repo'
		url "https://repository.sonatype.org/content/groups/forge"
	}
	
	mavenLocal()
    mavenCentral()
}

ext.hamcrest_as3_version = '1.1.0'

dependencies {
    test   group: 'hamcrest-as3',   name: 'hamcrest-as3',    version: hamcrest_as3_version,    ext: 'swc'
	
	test fileTree(dir: "$LIB_FLEXUNIT/flexunit", include: '*.swc')
    test fileTree(dir: "$LIB_FLEXUNIT/flexunit", include: '*.jar')
}

flexHome = FLEX_HOME
frameworkLinkage = 'none'
type = 'swc'
srcDirs = ['../swfdata/src/main/actionscript', '/src/main/actionscript', '../fastByteArray/src/main/actionscript']

flexUnit {
	template = 'src/test/resources/FlexUnitRunner.as'
	verbose = 'true'
	verbose = true
	additionalCompilerOptions = [
		"-target-player=$TARGET_PLAYER",
		'+configname=air'
	]
}

task downloadFlexUnit(type: de.undercouch.gradle.tasks.download.Download) {
    src URL_FLEXUNIT
    dest new java.io.File(TMP_DIR, "flexunit.zip")
}
task downloadAndUnzipFlexUnit(type: Copy) {
    if (!file("$LIB_FLEXUNIT/flexunit").exists()) {
        dependsOn downloadFlexUnit
        from zipTree(downloadFlexUnit.dest)
        into LIB_FLEXUNIT
    }
}
test.dependsOn downloadAndUnzipFlexUnit

